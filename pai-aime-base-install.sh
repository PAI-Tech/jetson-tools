#!/bin/bash
# pai-aime-base-install-.sh
# Install new AIME jetson
# pai-script-id=9729e1er-60d7-42cb-8f01-dcf075b4cbf9
# Created by Eran Caballero on Wed Feb 9 10:20:08 UTC 2022
# Generated by PAI Linux Bot
# Copyrights PAI Tech INC 2022, all rights reserved

#This script contains:

	#Set JETSON specific settings
	#Installs all required packages
	#Setting parameters
	#Installs AIME o/s file system


# PAI includes

PAI=/var/PAI
PAI_LOGS=$PAI/Logs

read -p "Please enter your user name : " USER_NAME

USER_NAME=$1

#. $PAI/System/pai.sh

PAI_INSTALLER_NAME="Pai Prepare AIME Jetson Linux Ubuntu"

# PAI functions

pai_9729e1ee-60d7-42cb-8f01-dcf075b4cbf9_intro()
{
	echo "Prepairing Linux OS For AIME"
	echo ""
	cp /usr/local/cuda/samples/common/findgllib.mk /usr/local/cuda/samples/common/findgllib.mk.bak
	wget -O /usr/local/cuda/samples/common/findgllib.mk https://cdn.pai-net.org/pai-cdn/get-file?cdn-key=5956a637-af93-45f4-a88e-2d8eaadb26f9
	cp /etc/nvidia-container-runtime/config.toml /etc/nvidia-container-runtime/config.toml.bak
        wget -O /etc/nvidia-container-runtime/config.toml https://cdn.pai-net.org/pai-cdn/get-file?cdn-key=865138be-3ca1-4b89-ac8b-ae30948af170
	cp /etc/docker/daemon.json /etc/docker/daemon.json.bak
        wget -O /etc/docker/daemon.json https://cdn.pai-net.org/pai-cdn/get-file?cdn-key=9f3e56d3-d2c4-46f9-b1fd-3df13bc2429e
	echo ""
}

pai_update_os()
{
	echo "Updating OS & Installing Default (Jetson-Linux)..."
	PAI_REQUIERED_PREPARE_INSTALLATION="apt-utils nano curl htop pydf zip unzip htop git build-essential gcc g++ make ubuntu-drivers-common libssl-dev libffi-dev libomp-dev software-properties-common python-dev python-numpy python-tk python3-dev python3-tk python3-numpy python-setuptools python-scipy python3-setuptools python3-pil python3-smbus python3-matplotlib libpython3-dev libopenmpi-dev ninja-build libatlas-base-dev libatlas3-base net-tools libgl1-mesa-dri mesa-va-drivers mesa-vdpau-drivers ubuntu-drivers-common openssh-server libboost1.65-dev libboost-filesystem1.65-dev libboost-system1.65-dev libboost-date-time1.65-dev libboost1.65-dev libboost-atomic1.65-dev libboost-chrono1.65-dev libboost-date-time1.65-dev libboost-system1.65-dev libboost-dev libboost-tools-dev magics++  libboost-log1.65-dev libboost-thread1.65-dev libkml-dev libboost-log-dev libboost-thread-dev yasm nasm wget sysstat cmake libopus-dev libass-dev libtool libc6 libc6-dev libnuma1 libnuma-dev sysstat x264 libx264-dev libx265-dev libvpx-dev libfdk-aac-dev libmp3lame-dev pkg-config libjpeg-dev libtiff5-dev freeglut3-dev libx11-dev libxmu-dev libxi-dev libgl1-mesa-glx libglu1-mesa libglu1-mesa-dev libglfw3-dev libgles2-mesa-dev libavcodec-dev libavformat-dev libv4l-dev libxvidcore-dev libx264-dev libgtk-3-dev libhdf5-serial-dev graphviz libopenblas-dev libatlas-base-dev gfortran libswscale-dev libavresample-dev libxvidcore-dev x264 libx264-dev libfaac-dev libmp3lame-dev libtheora-dev libfaac-dev libmp3lame-dev libvorbis-dev libavresample-dev checkinstall libopencore-amrnb-dev libopencore-amrwb-dev libdc1394-22 libdc1394-22-dev libxine2-dev libv4l-dev v4l-utils libgtk-3-dev libopencv-dev build-essential checkinstall pkg-config yasm libjpeg-dev libdc1394-22-dev libxine2-dev libv4l-dev libtbb-dev libeigen3-dev libqt4-dev libgtk2.0-dev libfaac-dev libmp3lame-dev libopencore-amrnb-dev libopencore-amrwb-dev libtheora-dev libvorbis-dev libxvidcore-dev x264 v4l-utils qt5-default libvtk6-dev ant default-jdk zlib1g-dev libwebp-dev libtiff5-dev libopenexr-dev libgdal-dev libx264-dev libtbb2 libglew-dev python-opencv python-vtk6 liblapacke liblapacke-dev libopenblas-base libopenblas-dev libtmglib-dev libtmglib3 doxygen graphviz python-pil python-pil.imagetk python-decorator mesa-utils python-scipy hdf5-tools libhdf5-dev zip libjpeg8-dev liblapack-dev libblas-dev gfortran python3-venv libgstreamer-plugins-base1.0-dev libgstreamer1.0-dev libgtk2.0-dev libgtk-3-dev libpng-dev libjpeg-dev libopenexr-dev libtiff-dev libwebp-dev"
	apt-get update
	apt-get upgrade
	apt-get install $PAI_REQUIERED_PREPARE_INSTALLATION
	apt-get autoremove
	echo "OS updated :)"
	cd /usr/include/linux
	ln -s -f ../libv4l1-videodev.h videodev.h
	chown -R $USER_NAME:$USER_NAME /home/$USER_NAME/.cache/
	echo ""
	echo ""
}

pai_update_locale()
{
	locale-gen "he_IL.UTF-8"
	locale-gen "en_US.UTF-8"
	#dpkg-reconfigure locales #IBM
	update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8 #Jetson #MS
	timedatectl set-timezone Asia/Jerusalem
	echo "Locale (UTF+TZ) updated"
	echo ""
}

pai_handle_sudoers()
{
	echo "Handling Sudoers"
	dpkg-statoverride --update --add root sudo 4750 /bin/su
	echo ""
}

pai_update_profiles()
{
	if grep -r "PAI :]" "/etc/profile";
	then 
		echo "Profile file already updated"
	else
		echo "# PAI :]" >> /etc/profile
		echo "PAI=/var/PAI" >> /etc/profile
		echo "" >> /etc/profile
		echo "PATH=/usr/local/cuda-10.2/bin:$PATH" >> /etc/profile
		echo "LD_PATH_LIBRARY=/usr/local/cuda-10.2/lib64:/usr/local/lib:/opt/nvidia/deepstream/deepstream-5.1/lib" >> /etc/profile
		echo "LD_LIBRARY_PATH=/usr/local/lib:/usr/local/cuda-10.2/lib64/" >> /etc/profile
		echo "LIBRARY_PATH=$LIBRARY_PATH:/usr/local/cuda-10.2/lib64" >> /etc/profile
		echo "LD_RUN_PATH=/usr/local/lib" >> /etc/profile
		echo "PKG_CONFIG_PATH=/usr/local/lib/pkgconfig/" >> /etc/profile
		echo "" >> /etc/profile
		. /etc/profile
#		echo "nameserver 8.8.8.8" >> /etc/resolv.conf
		echo "Profile file updated"
		echo ""
	fi
}

pai_update_bashrc()
{
        if grep -r "PAI :]" "/home/pai/.bashrc";
        then 
                echo "Bashrc file already updated"
	else
		echo "" >> /home/pai/.bashrc
		echo "# PAI :]" >> /home/pai/.bashrc
		echo "PAI=/var/PAI" >> /home/pai/.bashrc
		echo "" >> /home/pai/.bashrc
		echo "# Start X if no DISPLAY" >> /home/pai/.bashrc
		echo "if [ -z "$DISPLAY" ]" >> /home/pai/.bashrc
		echo "then" >> /home/pai/.bashrc
		echo "  startx > /dev/null 2>&1 &" >> /home/pai/.bashrc
		echo "  export DISPLAY=:1.0" >> /home/pai/.bashrc
		echo "fi" >> /home/pai/.bashrc
		. /home/pai/.bashrc
		echo "Bashrc file updated"
		echo ""
	fi
}

pai_ssh_setup()
{
	echo "SSH Setup"
	SSHD_CONFIG_FILE="/etc/ssh/sshd_config"
	echo "Reconfigure password authentication"
	sed -i 's/^PasswordAuthentication.*/PasswordAuthentication yes/' $SSHD_CONFIG_FILE
	apt-get install openssh-client openssh-server openssh-sftp-server
	service ssh restart
	echo "Done..."
	echo ""
}

pai_nodejs_install()
{
        echo "Installing Nodejs"
	curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash - && \
	apt-get install nodejs
	npm i -g forever
	chown -R $USER_NAME:$(id -gn $USER_NAME) /home/$USER_NAME/.config
	usermod -aG docker $USER_NAME
	echo "Done..."
	echo ""
}

pai_install_os_fs()
{
	echo "Installing AIME O/S"
	git clone https://github.com/PAI-Tech/PAI-OS-INSTALLER.git
	python3 ./PAI-OS-INSTALLER/setup.py install
	rm -rf PAI-OS-INSTALLER
	echo "Done..."
	echo ""
}

pai_install_jetson_inference()
{
	#Installs also Torch & Torchvision
	echo "Installing Dustyn Jetson-Inference"
	echo ""
	cd Documents
	git clone -recrusive https://github.com/dusty-nv/jetson-inference
	cd jetson-inference
	mkdir -p build
	cd build
	cmake ..
	make -j$(nproc)
	make install
	sudo ldconfig
	cd ../..

}

#git clone https://github.com/PAI-Tech/PAI-OS-LINUX.git
	

# PAI MAIN FLOW

pai_9729e1ee-60d7-42cb-8f01-dcf075b4cbf9_intro
pai_install_os_fs
pai_update_profiles
pai_update_bashrc
pai_update_os
pai_update_locale
pai_handle_sudoers
pai_ssh_setup
pai_nodejs_install
